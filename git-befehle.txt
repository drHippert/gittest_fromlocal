# Kurze Übersicht aller Befehle anzeigen
git config -h

# Ordner als Git Projekt installieren
git init

# Usernamen festlegen
git config --global user.name "ebody"

# E-Mail Adresse festlegen
git config --global user.email "e-body@arcor.de"

# Zeigt alle globalen Einstellungen
git config --global -e

# Status der Dateien sehen
git status

# Datei in Index hinzufügen
git add name.txt

# Alle .txt Dateien dem Index hinzufügen
git add *.txt

# Alle Dateien aus Verzeichnis dem Index hinzufügen
git add .

# Listet alle Dateien in der Staging Area, Index (Warteschleife, Ort für Dateien, die geprüft werden sollen) auf
git ls-files

# Hilfe für einen Befehl aufrufen
git <befehl> wie rm -h

# Datei löschen. Danach git add file.txt, damit die Datei aus der Stage gelöscht wird.
git rm file.txt

# Datei umbennen
git mv alt.txt neu.txt

# Verzeichnis erstellen
mkdir meinverzeichnis

# Schreibt "hello" in die Datei dev.log und erstellt die Datei 
echo hello > meinverzeichnis/dev.log

# Verzeichnis ignorieren. git status würde nicht etwas wie "untracked..." melden, wenn man es nicht geadded hat
echo meinverzeichnis/ > .gitignore

# Öffnet die Datei .gitignore. Hier kann man Dateien, auch *.txt eintragen, die ignoriert werden sollen
code .gitignore

# --chached entfernt nur aus dem Index. -r habe ich nicht verstanden
git rm --cached -r bin/

# Alle Code Änderungen anzeigen
git diff --staged

# Listet alle commits auf. 
## Mit Leertaste springt man zur nächsten Seite, wenn es sehr lange Einträge sind
## Q = beenden
git log

# Listet alle commit Messages auf. Neueste zuerst. Ist etwas übersichtlicher. 
git log --oneline

# Listet alle commit Messages auf. Älteste zuerst. Ist etwas übersichtlicher. 
git log --oneline --reverse

# Zeigt Commit Details anhand der ID, wie Message, aber auch Code Änderungen
git show <unique id>

# Zeigt Commit Details zwei Schritte zuvor, wie Message, aber auch Code Änderungen
git show HEAD~2

# Zeigt Commit Details zwei Schritte zuvor, wie Message, aber auch Code Änderungen
git show HEAD~2:git-befehle.txt


git remote add origin https://github.com/ThomasLeister/beispiel.git

